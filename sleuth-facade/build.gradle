buildscript {
    ext {
        javaVersion = JavaVersion.VERSION_11
        kotlinVersion = '1.4.10'
        springBootVersion = '2.3.9.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

plugins {
    id "jacoco"
    id "org.sonarqube" version "3.0"
    id "com.gorylenko.gradle-git-properties" version "2.2.4"
}

apply plugin: 'java'
apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-allopen"
apply plugin: "kotlin-kapt"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://repo.spring.io/plugins-release/'
    }
}

group = 'br.com.alelo'
version = '1.0.2'
sourceCompatibility = javaVersion

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR1"
//        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.2"
//        runtimeOnly group: 'org.springframework.cloud', name: 'spring-cloud-dependencies', version: '2020.0.2', ext: 'pom'
    }
}

dependencies {

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation ("io.springfox:springfox-swagger2:2.9.2") {
        exclude module: "mapstruct"
    }
    implementation "io.springfox:springfox-swagger-ui:2.9.2"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "io.github.microutils:kotlin-logging:1.6.24"
    implementation 'de.codecentric:spring-boot-admin-starter-client:2.3.1'
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.14'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation "io.projectreactor.kotlin:reactor-kotlin-extensions:1.1.3"


//    compile 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"
//    implementation "org.springframework.cloud:spring-cloud-sleuth-zipkin"

    kapt("org.springframework.boot:spring-boot-configuration-processor")

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "com.ninja-squad:springmockk:1.1.3"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
}

task printVersion {
    doLast {
        println "Build version: $version"
    }
}

task printProjName {
    doLast {
        println "name: ${project.name}"
    }
}

gitProperties {
    failOnNoGitDirectory = false
    keys = ["git.branch", "git.commit.id.abbrev", "git.commit.id.describe"]
}
